name: Create CampCrap Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Extract version from tag and set build info
      id: get_version
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        APP_VERSION="1.0+${{ github.run_number }}"
        VERSION_CODE=$((1000000 + ${{ github.run_number }}))
        echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_OUTPUT
        echo "APP_VERSION=$APP_VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "Building release: $APP_VERSION (code: $VERSION_CODE) for tag: $TAG_VERSION"

    - name: Run tests
      run: ./gradlew test

    - name: Set up signing config
      run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > keystore.jks
    - name: Build and sign release APK
      run: ./gradlew assembleRelease
      env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}


    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: CampCrap ${{ steps.get_version.outputs.TAG_VERSION }}
        body: |
          ## 🏕️ CampCrap Release ${{ steps.get_version.outputs.TAG_VERSION }}

          ### Version Information
          - **App Version:** ${{ steps.get_version.outputs.APP_VERSION }}
          - **Version Code:** ${{ steps.get_version.outputs.VERSION_CODE }}
          - **Build Number:** ${{ github.run_number }}
          - **Git Tag:** ${{ steps.get_version.outputs.TAG_VERSION }}
          - **Commit:** ${{ github.sha }}

          ### Features
          - 🏕️ Comprehensive camping inventory management
          - 👥 Camper management with contact integration
          - 📍 Location-based item tracking
          - 📷 Photo capture for item documentation
          - 🗂️ Item categorization and removal tracking
          - 💾 Local SQLite storage with full offline functionality

          ### Installation
          1. Download the APK file below
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install the APK on your Android device
          4. Grant camera and location permissions when prompted

          ### Usage
          1. Launch CampCrap and add your first camper
          2. Set up storage locations for your camp
          3. Add inventory items with photos using "View Crap"
          4. Link each item to a camper (owner) and location
          5. Track item removal status (trashed, taken home, donated)

          ---
          🤖 **Automated Release** - Built with GitHub Actions
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: CampCrap-${{ steps.get_version.outputs.APP_VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive
